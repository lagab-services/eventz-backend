name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      #- name: Run tests
      #  run: mvn clean test

      - name: Build with Maven
        run: mvn clean install

      - name: sonar check
        run: |
          mvn sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_NAME} \
          -Dsonar.organization=lagab-services \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.password=
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_PROJECT_NAME: lagab-services_eventz-backend

      - name: Build application
        run: mvn clean package -DskipTests

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: target/*.jar
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')  # Only on v* tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Extract tag version
        id: tag-version
        run: |
          # Extracts version from tag (v1.0.0 -> 1.0.0)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG_VERSION"

      - name: Update Maven version
        run: |
          # Updates version in pom.xml with the tag version
          mvn versions:set -DnewVersion=${{ steps.tag-version.outputs.version }}
          mvn versions:commit

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/eventz-backend
          tags: |
            # Git tag version (ex: 1.0.0)
            type=semver,pattern={{version}}
            # Major.minor version (ex: 1.0)
            type=semver,pattern={{major}}.{{minor}}
            # Major version (ex: 1)
            type=semver,pattern={{major}},enable=${{ !contains(steps.tag-version.outputs.version, '-') }}
            # Latest for stable versions (no pre-release)
            type=raw,value=latest,enable=${{ !contains(steps.tag-version.outputs.version, '-') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
